<div id="pie2" style="height: 250px"></div>
<p style="text-align: center">
  The <span class="pie_stat"><%= number_to_percentage(@morning_percentage, precision: 2) %></span>
  of the trips were made during morning hours (from 6am to 12pm),
  <span class="pie_stat"><%= number_to_percentage(@afternoon_percentage, precision: 2) %></span>
  during the afternoon (12pm to 5pm),
  <span class="pie_stat"><%= number_to_percentage(@evening_percentage, precision: 2) %></span>
  in the evening (5pm to 8pm) and the rest
  <span class="pie_stat"><%= number_to_percentage(@night_percentage, precision: 2) %></span>
  at night (8pm to 6am).
</p>

<script>

var svg2 = d3.select("#pie2")
  .append("svg")
  .append("g")

svg2.append("g")
  .attr("class", "slices");
svg2.append("g")
  .attr("class", "labels");
svg2.append("g")
  .attr("class", "lines");

var width = 390,
    height = 230,
    radius = Math.min(width, height) / 2;

var pie2 = d3.layout.pie()
  .sort(null)
  .value(function(d) {
    return d.value;
  });

var arc = d3.svg.arc()
  .outerRadius(radius * 0.8)
  .innerRadius(radius * 0.4);

var outerArc = d3.svg.arc()
  .innerRadius(radius * 0.9)
  .outerRadius(radius * 0.9);

svg2.attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");

var key = function(d){ return d.data.label; };

var color2 = d3.scale.ordinal()
  .range(["#98abc5", "#8a89a6", "#7b6888", "#6b486b"]);


d3.json("time_of_day/<%= @selected_city %>", function(error, data) {

  data.forEach(function(d) {
    d.population = +d.population;
  });

  /* ------- PIE SLICES -------*/
  var slice = svg2.select(".slices").selectAll("path.slice")
    .data(pie2(data), key);

  slice.enter()
    .insert("path")
    .style("fill", function(d) { return color2(d.data.label); })
    .attr("class", "slice");

  slice
    .transition().duration(500)
    .attrTween("d", function(d) {
      this._current = this._current || d;
      var interpolate = d3.interpolate(this._current, d);
      this._current = interpolate(0);
      return function(t) {
        return arc(interpolate(t));
      };
    })

  slice.exit()
    .remove();

  /* ------- TEXT LABELS -------*/

  var text = svg2.select(".labels").selectAll("text")
    .data(pie2(data), key);

  text.enter()
    .append("text")
    .attr("dy", ".35em")
    .attr("class", "pie_label")
    .text(function(d) {
      return d.data.label;
    });

  function midAngle(d){
    return d.startAngle + (d.endAngle - d.startAngle)/2;
  }

  text.transition().duration(500)
    .attrTween("transform", function(d) {
      this._current = this._current || d;
      var interpolate = d3.interpolate(this._current, d);
      this._current = interpolate(0);
      return function(t) {
        var d2 = interpolate(t);
        var pos = outerArc.centroid(d2);
        pos[0] = radius * (midAngle(d2) < Math.PI ? 1 : -1);
        return "translate("+ pos +")";
      };
    })
    .styleTween("text-anchor", function(d){
      this._current = this._current || d;
      var interpolate = d3.interpolate(this._current, d);
      this._current = interpolate(0);
      return function(t) {
        var d2 = interpolate(t);
        return midAngle(d2) < Math.PI ? "start":"end";
      };
    });

  text.exit()
    .remove();

  /* ------- SLICE TO TEXT POLYLINES -------*/

  var polyline = svg2.select(".lines").selectAll("polyline")
    .data(pie2(data), key);

  polyline.enter()
    .append("polyline");

  polyline.transition().duration(1000)
    .attrTween("points", function(d){
      this._current = this._current || d;
      var interpolate = d3.interpolate(this._current, d);
      this._current = interpolate(0);
      return function(t) {
        var d2 = interpolate(t);
        var pos = outerArc.centroid(d2);
        pos[0] = radius * 0.95 * (midAngle(d2) < Math.PI ? 1 : -1);
        return [arc.centroid(d2), outerArc.centroid(d2), pos];
      };
    });

  polyline.exit()
    .remove();
});

</script>
